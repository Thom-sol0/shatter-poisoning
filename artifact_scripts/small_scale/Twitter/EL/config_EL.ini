[DATASET]
dataset_package = decentralizepy.datasets.text.Twitter
dataset_class = Twitter
model_class = BERT
tokenizer = BERT
train_dir = ./data/sent140/train
test_dir = ./data/sent140/test
; python list of fractions below
sizes =
random_seed = 90
test_batch_size = 32
at_most = None

[OPTIMIZER_PARAMS]
optimizer_package = torch.optim
optimizer_class = SGD
lr = 0.005

[TRAIN_PARAMS]
training_package = decentralizepy.training.text.LLMTraining
training_class = LLMTraining
rounds = 1
full_epochs = True
batch_size = 32
shuffle = True
loss_package = torch.nn
loss_class = CrossEntropyLoss

[COMMUNICATION]
comm_package = decentralizepy.communication.TCP
comm_class = TCP
addresses_filepath = ip.json

[SHARING]
sharing_package = virtualNodes.sharing.VNodeSharingAttackRandomLOSS
sharing_class = VNodeSharingAttackRandomLOSS
compression_package = decentralizepy.compression.EliasFpzip
compression_class = EliasFpzip
compress = False
attack_after = 3
perform_attack = True
attack_random = 4
will_receive = 4

[NODE]
vnodes_per_node = 1
graph_degree = 4
threads_per_proc = 2
dynamic = True
perturb_model = True
perturb_multiplier = 4
