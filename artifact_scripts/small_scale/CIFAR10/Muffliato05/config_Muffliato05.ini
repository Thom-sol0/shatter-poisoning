[DATASET]
dataset_package = decentralizepy.datasets.CIFAR10
dataset_class = CIFAR10
model_class = ResNet18
train_dir = ./data/CIFAR10/
test_dir = ./data/CIFAR10/
; python list of fractions below
sizes =
random_seed = 90
partition_niid = dirichlet
alpha = 0.1
test_batch_size = 128

[OPTIMIZER_PARAMS]
optimizer_package = torch.optim
optimizer_class = SGD
lr = 0.1

[TRAIN_PARAMS]
training_package = decentralizepy.training.Training
training_class = Training
rounds = 1
full_epochs = True
batch_size = 32
shuffle = True
loss_package = torch.nn
loss_class = CrossEntropyLoss

[COMMUNICATION]
comm_package = decentralizepy.communication.TCP
comm_class = TCP
addresses_filepath = ip.json

[SHARING]
sharing_package = virtualNodes.sharing.VNodeSharingAttackRandomLOSS
sharing_class = VNodeSharingAttackRandomLOSS
compress = False
attack_after = 100
perform_attack = True
attack_random = 4
will_receive = 4

[NODE]
vnodes_per_node = 1
graph_degree = 4
dynamic = True
noise_std = 0.025
train_after = 10
